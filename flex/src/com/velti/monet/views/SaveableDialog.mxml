<?xml version="1.0" encoding="utf-8"?>
<views:DialogBase xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:views="com.velti.monet.views.*">
	<mx:Script>
	<![CDATA[
		import flexunit.framework.ProtectedFinishTestCase;
		
		import mx.automation.IAutomationObject;
		import mx.containers.Canvas;
		import mx.containers.ControlBar;
		import mx.controls.Button;
		import mx.controls.HRule;
		import mx.core.IUIComponent;
		import mx.core.mx_internal;
		import mx.events.FlexEvent;
		
		use namespace mx_internal;
		
		protected var cbar:ControlBar;
		
		/**
		 * The save button that triggers a call to save()
		 */
		protected var saveButton:Button;
		protected var checkedForAutoSetRoundedCorners:Boolean;
		protected var autoSetRoundedCorners:Object;
		protected var bottomHRule:HRule;
		/**
		 * Selects the current element.
		 * Usually overriden in the base class.
		 * The super method selects the element so
		 * if overriden it should cal super.save()
		 */
		protected function save():void {
			
		}
		
		/**
		 * save button click handler
		 */
		protected function saveButon_click(event:MouseEvent):void {
			save();
			close();
		}
		
		override protected function createChildren():void {
			super.createChildren();
			bottomHRule = new HRule();
			bottomHRule.percentWidth = 100;
			addChild(bottomHRule);
		}
		
		override public function createComponentsFromDescriptors(recurse:Boolean = true):void
		{
			super.createComponentsFromDescriptors(recurse);
			cbar = new ControlBar();
			rawChildren.addChild(cbar);
			saveButton = new Button();
			cbar.addChild(saveButton);
			cbar.setStyle("horizontalAlign","right");
			cbar.percentWidth = 100;
			saveButton.setStyle("right",10);
			saveButton.label = "Save";
			saveButton.addEventListener(MouseEvent.CLICK, saveButon_click, false,0,true);
			setControlBar(cbar);
		}
		
		private function setControlBar(newControlBar:IUIComponent):void
		{
			if (newControlBar == controlBar)
				return;
			
			controlBar = newControlBar;     
			
			// If roundedBottomCorners is set locally, don't auto-set
			// it when the controlbar is added/removed.
			if (!checkedForAutoSetRoundedCorners)
			{
				checkedForAutoSetRoundedCorners = true;
				autoSetRoundedCorners = styleDeclaration ? 
					styleDeclaration.getStyle("roundedBottomCorners") === undefined : 
					true;
			}
			
			if (autoSetRoundedCorners)
				setStyle("roundedBottomCorners", controlBar != null);
			
			var controlBarStyleName:String = getStyle("controlBarStyleName");
			
			if (controlBarStyleName && controlBar is ISimpleStyleClient)
				ISimpleStyleClient(controlBar).styleName = controlBarStyleName;
			
			if (controlBar)
				controlBar.enabled = enabled;
			if (controlBar is IAutomationObject)
				IAutomationObject(controlBar).showInAutomationHierarchy = false;
			
			invalidateViewMetricsAndPadding();
			invalidateSize();
			invalidateDisplayList();
		}
		
	]]>
	</mx:Script>
</views:DialogBase>
