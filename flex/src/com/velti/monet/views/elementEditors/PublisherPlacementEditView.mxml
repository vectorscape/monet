<?xml version="1.0" encoding="utf-8"?>
<elementEditors:ElementEditorBase xmlns:elementEditors="com.velti.monet.views.elementEditors.*"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:views="com.velti.monet.views.*"
	title="Media Plan Step 3. Select Publishers and Placements">
	<mx:Text text="{dialogText}"/>
	<mx:Tree id="tree" width="100%" height="400" dataProvider="{publishersAndPlacements}"
		defaultLeafIcon="{null}" labelField="@label" showRoot="false" 
		itemRenderer="com.velti.monet.controls.itemRenderers.TreeCheckBoxItemRenderer"
		openItems="{publishersAndPlacements..node}" />
	<mx:Script>
	<![CDATA[
		import com.velti.monet.models.Element;
		import com.velti.monet.models.ElementType;
		import com.velti.monet.models.Plan;
		import com.velti.monet.models.elementData.AudienceElementData;
		import com.velti.monet.models.elementData.PublisherElementData;
		
		import mx.events.FlexEvent;
		
		/**
		 * A ref to the plan bean
		 */
		[Inject]
		public var plan:Plan;
		
		/**
		 * The text to use at the top of the dialog.
		 */
		[Bindable]
		public var dialogText:String = 
			"Select the pages where you want to place " +
			"your \ninteractions. The publishers are " +
			"ranked according to the \ntarget audience " +
			"characteristics you selected.";
		/**
		 * An XML representation of publishers and placements to choose from.
		 */
		[Bindable(event="elementChanged")]
		public function get publishersAndPlacements():XML {
			var returnVal:XML = new XML();
			var parentElement:Element
			if(element && element.parents && element.parents.length > 0) {
				parentElement = Element(plan.getItemByIndex(element.parents[0]));	
				if(element.type == ElementType.PLACEMENT) {
					//crawl up one more level
					parentElement = Element(plan.getItemByIndex(parentElement.parents[0]));
				}
				returnVal = AudienceElementData(parentElement.data).publishersAndPlacements;
			}
			return returnVal;
		}
		
		/**
		 * The element data 
		 */
		[Bindable(event="elementChanged")]
		public function get elementData():PublisherElementData {
			return element ? element.data as PublisherElementData : null;
		}
		
		/**
		 * @inheritDoc
		 */
		override protected function save():void
		{
			elementData.placements = publishersAndPlacements.(attribute("checked") == "1");
			super.save();
		}
		
	]]>
	</mx:Script>
	
</elementEditors:ElementEditorBase>
