<?xml version="1.0" encoding="utf-8"?>
<elementEditors:ElementEditorBase xmlns:elementEditors="com.velti.monet.views.elementEditors.*"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:views="com.velti.monet.views.*" elementChanged="elementeditorbase1_elementChangedHandler(event)"
	title="Media Plan Step 4. Upload Content">
	<mx:Label text="Creatives"/>
	<mx:Form verticalGap="5" paddingTop="0" paddingBottom="0">
		<mx:Label text="Choose a creative to associate to the selected placement."/>
		<mx:FormItem label="Ad Source" direction="horizontal">
			<mx:ComboBox id="addSourceCombo" dataProvider="{['Use placeholder', 'Browse creative library', 'Upload new creative', 'Browse 5ML Only']}" prompt="- Select -" />
			<mx:Button label="Browse" includeInLayout="{addSourceCombo.selectedItem == 'Browse creative library'}" visible="{addSourceCombo.selectedItem == 'Browse creative library'}" click="button1_clickHandler()" 
				showEffect="Fade" />
		</mx:FormItem>
		<mx:Image source="{selectedLibraryItem.url}" height="50" width="200"
			visible="{selectedLibraryItem != null}" includeInLayout="{selectedLibraryItem != null}" 
			showEffect="Fade"/>
		<mx:Text text="Your file was successfully associated to this placement. If you want to display it on more placements you can drag it from the left panel onto additional 'choose ad' bubbles."
			visible="{selectedLibraryItem != null}" includeInLayout="{selectedLibraryItem != null}" width="325"/>
	</mx:Form>
	<mx:HRule width="100%"/>
	<mx:Label text="Ad Info"/>
	<mx:Form verticalGap="5" paddingTop="0" paddingBottom="0">
		<mx:FormItem label="Ad Name:">
			<mx:TextInput id="nameTextInput"
				text="{elementData.name}"/>
		</mx:FormItem>
		<mx:FormItem label="Ad Type:">
			<mx:ComboBox id="typeCombo" prompt="Select" dataProvider="{ADVERTISEMENTS}"
				selectedItem="{elementData.type}" dropdownWidth="150" />
		</mx:FormItem>
		<mx:FormItem label="Call to Action:" direction="horizontal">
			<mx:ComboBox id="actionCombo" dataProvider="{['click to URL','click to call']}" 
				selectedItem="{elementData.actionType}"/>
			<mx:TextInput id="actionTextInput" 
				text="{elementData.actionText}"/>
		</mx:FormItem>
		<mx:FormItem label="Ad Text:">
			<mx:TextInput id="addTextTextInput" text="{elementData.addText}"/>
		</mx:FormItem>
		<mx:FormItem label="Schedule:" direction="horizontal">
			<mx:VBox>
				<mx:Label text="Starts" />
				<mx:DateField id="startDateField" selectedDate="{elementData.startDate}"/>
			</mx:VBox>
			<mx:VBox>
				<mx:Label text="Ends" />
				<mx:DateField id="endDateField" selectedDate="{elementData.endDate}"/>
			</mx:VBox>
		</mx:FormItem>
	</mx:Form>
	<mx:HRule width="100%"/>
	<mx:CheckBox label="This ad will be displayed on more than one placement." />
	<mx:Script>
	<![CDATA[
		import com.velti.monet.models.AdvertisementType;
		import com.velti.monet.models.CreativeLibraryItem;
		import com.velti.monet.models.Element;
		import com.velti.monet.models.elementData.AdvertisementElementData;
		import com.velti.monet.models.elementData.ElementData;
		import com.velti.monet.views.CreativeLibraryDialog;
		
		import mx.collections.ArrayCollection;
		
		protected var cld:CreativeLibraryDialog
		
		[Bindable]
		private var selectedLibraryItem:CreativeLibraryItem;
		
		/**
		 * The element data 
		 */
		[Bindable(event="elementChanged")]
		public function get elementData():AdvertisementElementData {
			return element ? element.data as AdvertisementElementData : null;
		}
		
		public static const ADVERTISEMENTS:ArrayCollection = new ArrayCollection([
			AdvertisementType.BANNER,
			AdvertisementType.AUDIO,
			AdvertisementType.VIDEO,
			AdvertisementType.RICH_MEDIA,
			AdvertisementType.TEXT,
			AdvertisementType.GENERIC
		]);
		
		/**
		 * @inheritDoc
		 */
		override protected function save():void {
			elementData.name = nameTextInput.text;
			elementData.type = typeCombo.selectedItem as AdvertisementType;
			elementData.actionType = actionCombo.selectedItem as String;
			elementData.actionText = actionTextInput.text;
			elementData.addText = addTextTextInput.text;
			elementData.endDate = endDateField.selectedDate;
			elementData.startDate = startDateField.selectedDate;
			if(elementData.creativeLibraryItem) {
				elementData.creativeLibraryItem.numTimesUsedInPlan--;
			}
			elementData.creativeLibraryItem = selectedLibraryItem;
			elementData.creativeLibraryItem.numTimesUsedInPlan++;
			
			super.save();
		}
		
		protected function button1_clickHandler():void {
			cld = new CreativeLibraryDialog();
			cld.addEventListener(CreativeLibraryDialog.SAVE,cld_save,false,0,true);
			cld.show();
		}
		
		protected function cld_save(e:Event):void {
			selectedLibraryItem = cld.adsList.selectedItem as CreativeLibraryItem;
			cld = null;
		}
		
		protected function elementeditorbase1_elementChangedHandler(event:Event):void
		{
			if(this.elementData) {
				selectedLibraryItem = elementData.creativeLibraryItem;
			} else {
				selectedLibraryItem = null;
			}
		}
		
	]]>
	</mx:Script>
</elementEditors:ElementEditorBase>
