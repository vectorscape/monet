<?xml version="1.0" encoding="utf-8"?>
<controls:CollapsiblePanel 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:controls="com.velti.monet.controls.*" 
	layout="absolute" title="SELECTION PROPERTIES"
	creationComplete="collapsiblepanel1_creationCompleteHandler(event)"
	paddingLeft="0" paddingRight="0" paddingTop="0" paddingBottom="0" 
	borderThickness="0" borderStyle="none" >
	
	<mx:List dataProvider="{fields}" labelFunction="labelFunc" 
		dataTipFunction="labelFunc" width="100%" 
		styleName="propertiesList" height="150" />
	
	<mx:Script>
	<![CDATA[
		import com.velti.monet.collections.IElementCollection;
		import com.velti.monet.collections.IndexedCollection;
		import com.velti.monet.models.Element;
		import com.velti.monet.models.elementData.VeltiInspectableProperty;
		
		import mx.collections.ArrayCollection;
		import mx.collections.Sort;
		import mx.collections.SortField;
		import mx.events.CollectionEvent;
		import mx.events.FlexEvent;
		
		/**
		 * The list of <code>VeltiInspectableProperty</code> objects.
		 */
		[Bindable]
		public var fields:ArrayCollection = new ArrayCollection();
		
		[Inject(source="presentationModel.selectedElements")]
		public function set selectedElements( value:IndexedCollection ):void {
			if( _selectedElements != value ){
				if( _selectedElements ){
					_selectedElements.removeEventListener(CollectionEvent.COLLECTION_CHANGE, selectedElements_change);
				}
				_selectedElements = value;
				if( _selectedElements ){
					_selectedElements.addEventListener(CollectionEvent.COLLECTION_CHANGE, selectedElements_change);
				}
				updateSelectionProperties();
			}
		}
		public function get selectedElements():IndexedCollection {
			return _selectedElements;
		}
		/**
		 * @private
		 */
		protected var _selectedElements:IndexedCollection;
		
		protected function selectedElements_change( event:CollectionEvent ):void {
			updateSelectionProperties();
		}
		
		/**
		 * @private
		 */
		public function updateSelectionProperties():void {
			if( selectedElements && selectedElements.length == 1 ){
				var element:Element = selectedElements.getItemAt( 0 ) as Element;
				if(!element || !element.data) this.fields.removeAll();
				else this.fields.source = element.data.propertyList;
			}else{
				this.fields.removeAll();
			}
			fields.refresh();
			invalidateDisplayList();
			invalidateSize();
		}
		
		public function labelFunc(obj:Object):String { // NO PMD
			var prop:VeltiInspectableProperty = obj as VeltiInspectableProperty;
			if(!prop) return "";
			return prop.name + ": " + prop.value;
		}
		/**
		 * @private
		 */
		protected function collapsiblepanel1_creationCompleteHandler(event:FlexEvent):void {
			fields.sort = new Sort();
			fields.sort.fields = [new SortField("name")]
		}
		
	]]>
	</mx:Script>
	
</controls:CollapsiblePanel>
