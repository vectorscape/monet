<?xml version="1.0" encoding="utf-8"?>
<controls:CollapsiblePanel xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:controls="com.velti.monet.controls.*"
	xmlns:components="com.velti.monet.views.components.*"
	title="TOOLS" verticalScrollPolicy="off"
	horizontalScrollPolicy="off" paddingBottom="5"
	horizontalAlign="center" verticalAlign="middle">
	
	<mx:Tile width="180" direction="horizontal" height="75"
		horizontalGap="10" verticalGap="10" horizontalAlign="center"
		verticalAlign="middle" verticalScrollPolicy="off"
		horizontalScrollPolicy="off" >
		<components:ToolButton id="pointerToolButton" 
			styleName="toolButtonPointer"
			toolTip="Selects one or more elements in the diagram"
			change="toolButton_changeHandler(event)" cursor="{Cursors.NONE}"
			selected="{presentationModel.interactionMode == InteractionMode.NONE}" 
			toggle="true"/>
		<components:ToolButton id="handToolButton" 
			styleName="toolButtonHand"
			toolTip="Moves the diagram on the canvas"
			change="toolButton_changeHandler(event)" cursor="{Cursors.HAND}"
			selected="{presentationModel.interactionMode == InteractionMode.HAND}" 
			toggle="true"/>
		<components:ToolButton id="moveToolButton" 
			styleName="toolButtonMove"
			toolTip="Moves the selected element(s) to the location where you drag them"
			change="toolButton_changeHandler(event)" cursor="{Cursors.MOVE}"
			selected="{presentationModel.interactionMode == InteractionMode.MOVE}" 
			toggle="true"/>
		<components:ToolButton id="copyToolButton" 
			styleName="toolButtonCopy"
			toolTip="Copies the  selected element to the location where you drag them"
			change="toolButton_changeHandler(event)" cursor="{Cursors.COPY}"
			selected="{presentationModel.interactionMode == InteractionMode.COPY}"
			toggle="true"/>
		<components:ToolButton id="tracePathButton" 
			styleName="toolButtonTracePath"
			toolTip="Select a diagram element to see all connecting paths"
			change="tracePathButton_changeHandler(event)"
			selected="{presentationModel.interactionMode == InteractionMode.TRACE_PATH}"
			enabled="{presentationModel.selectedElements.length == 1}" 
			toggle="true"/>
		<components:ToolButton id="selectMultipleToolButton" 
			styleName="toolButtonSelectMultiple"
			change="toolButton_changeHandler(event)" cursor="{Cursors.SELECT}"
			selected="{presentationModel.interactionMode == InteractionMode.SELECT_MULTIPLE}"
			toggle="true"/>
		<components:ToolButton id="magicWandToolButton" 
			styleName="toolButtonMagicWand"
			change="toolButton_changeHandler(event)" cursor="{Cursors.MAGIC_WAND}"
			selected="{presentationModel.interactionMode == InteractionMode.MAGIC}"
			toggle="true"/>
		<components:ToolButton id="showPathToolButton" 
			styleName="toolButtonShowPath"
			toolTip="Select a diagram element to see all connecting paths"
			change="toolButton_changeHandler(event)" cursor="{Cursors.MAGIC_WAND}"
			selected="{presentationModel.interactionMode == InteractionMode.SHOW_PATH}"
			enabled="{presentationModel.selectedElements.length == 1}" 
			toggle="true"/>
	</mx:Tile>
	
	<mx:Script>
		<![CDATA[
			import assetsEmbedded.tools.ToolsAssets;
			
			import com.velti.monet.events.InteractionModeEvent;
			import com.velti.monet.events.PlanEvent;
			import com.velti.monet.models.Element;
			import com.velti.monet.models.InteractionMode;
			import com.velti.monet.models.PresentationModel;
			
			import mx.controls.Alert;
			import mx.managers.CursorManager;
		
			/**
			 * Handle to the global presentation model.
			 */
			[Inject] [Bindable]
			public var presentationModel:PresentationModel;
			
			/**
			 * Swiz injected dispatcher.
			 */
			[Dispatcher]
			public var dispatcher:IEventDispatcher;
			
			/**
			 * Handles the user clicking to change the state of the pivot button
			 * to either turn pivoting on or off.
			 */
			protected function tracePathButton_changeHandler(event:Event):void {
				trace( "pivot button selected: " + tracePathButton.selected );
				if( tracePathButton.selected ){
					dispatcher.dispatchEvent( new PlanEvent( PlanEvent.PIVOT, presentationModel.selectedElements.getItemAt( 0 ) as Element ) );                    
				}else{
					dispatcher.dispatchEvent( new PlanEvent( PlanEvent.UNPIVOT ) );
				}
			}
			
			/**
			 * Handles the user clicking to change the state of the pivot button
			 * to either turn pivoting on or off.
			 */
			protected function traceButton_changeHandler(event:Event):void {
				trace( "trace button selected: " + tracePathButton.selected );
				tracePathButton.selected = false;
				if( tracePathButton.selected ){
					dispatcher.dispatchEvent( new PlanEvent( PlanEvent.TRACE, presentationModel.selectedElements.getItemAt( 0 ) as Element ) );
				}else{
					dispatcher.dispatchEvent( new PlanEvent( PlanEvent.UNTRACE ) );
				}
			}
			
			/**
			 * Handles the user clicking one of the mouse tool buttons
			 * to change the interaction mode of the application.
			 */
			protected function toolButton_changeHandler(event:Event):void {
				var interactionMode:InteractionMode;
				switch( event.target ){
					case pointerToolButton:
						interactionMode = InteractionMode.NONE;
						break;
					case handToolButton:
						interactionMode = InteractionMode.HAND;
						break;
					case moveToolButton:
						interactionMode = InteractionMode.MOVE;
						break;
					case copyToolButton:
						interactionMode = InteractionMode.COPY;
						break;
					case tracePathButton:
						interactionMode = InteractionMode.TRACE_PATH;
						break;
					case selectMultipleToolButton:
						interactionMode = InteractionMode.SELECT_MULTIPLE;
						break;
					case magicWandToolButton:
						interactionMode = InteractionMode.MAGIC;
						break;
					case showPathToolButton:
						interactionMode = InteractionMode.SHOW_PATH;
						break;
					default :
						trace("interaction mode not handled for: " +event.target.id);
						break;
				}
				dispatcher.dispatchEvent( new InteractionModeEvent( InteractionModeEvent.CHANGE, interactionMode ) );
				event.preventDefault();
				event.stopImmediatePropagation();
			}
		
		]]>
	</mx:Script>
</controls:CollapsiblePanel>
