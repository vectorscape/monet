<?xml version="1.0"?>
<project name="Automation Tasks" >
	
	<import file="flex-tasks.xml" />
	
	<property environment="env"/>
	
	<property name="libs.dir" value="${basedir}/libs" />
	<property name="reports.dir" value="${basedir}/reports"/>
	
	<macrodef name="check-ria-test-is-on-path">
		<sequential>
		<propertyregex property="riatest.available" input="${env.Path}" select="\0"
					regexp="riatest" casesensitive="false" />
			<if><not><isset property="riatest.available" /></not>
				<then><echo>${env.Path}</echo>
			</then></if>		
			<fail unless="riatest.available">Error: riatest needs to be installed and added to your path. It's typically found at C:\Program Files\RIATest 4\</fail>
			</sequential>
		</macrodef>
	
	
	<!-- - - - - - - - - - - - - - - - - - 
		  target: check-riatest-project-available-available
		 - - - - - - - - - - - - - - - - - -->
	<macrodef name="check-riatest-project-available">
		<attribute name="riatest-project" />
		<sequential>
			<available property="riatest-project.available" 
				file="@{riatest-project}" />
			<if>
				<not><isset property="riatest-project.available" /></not>
				<then><echo message="No test riatest-project found at: @{riatest-project}" /></then>
			</if>
		</sequential>
	</macrodef>
	
	<macrodef name="build-automation" >
		<attribute name="inputFile" />
		<attribute name="outputFile" />
		<attribute name="projectFile"/>
		<sequential>
			<check-riatest-project-available riatest-project="@{projectFile}" />
			<if><isset property="riatest-project.available" />
			<then>
				<echo message="Building for automation: @{inputFile}" />
				<buildFlexSWF inputfile="@{inputFile}" 
					outputfile="@{outputFile}">
					<additionalArgs>
						<arg value="-debug=true" />
						<arg line="-include-libraries ${libs.dir}/riatest/RIATestAgent4.swc &quot;${env.FLEX_HOME}/frameworks/libs/automation/automation.swc&quot; &quot;${env.FLEX_HOME}/frameworks/libs/automation/automation_dmv.swc&quot; &quot;${env.FLEX_HOME}/frameworks/libs/automation/automation_agent.swc&quot; &quot;${env.FLEX_HOME}/frameworks/libs/automation/automation_spark.swc&quot;" />
					</additionalArgs>
				</buildFlexSWF>
			</then>
			</if>
		</sequential>
	</macrodef>
	
	<macrodef name="run-riatest">
		<attribute name="inputFile" />
		<attribute name="outputFile" />
		<attribute name="projectFile"/>
		<sequential>
			<build-automation inputfile="@{inputFile}"
				outputfile="@{outputFile}" projectfile="@{projectFile}"/>
			<if>
				<and>
					<not><equals arg1="${swf.uptodate}" arg2="true" /></not>
					<isset property="riatest-project.available"/>
				</and>
				<then>
					<delete dir="${reports.dir}/riatest" failonerror="false" />
					<mkdir dir="${reports.dir}/riatest" />
					<exec executable="riatest.exe" failonerror="true">
						 <arg line="/b /r /p @{projectFile} /oj ${reports.dir}/riatest/results.junit" />
					</exec>
				</then>
				<else><if><isset property="riatest-project.available"/><then>
					<echo>No changes since last run.</echo></then>
					</if>
				</else>
			</if>
		</sequential>
	</macrodef>
	
	<!-- ================================= 
          target: riatest 
         ================================= -->
    <target name="riatest" depends="" description="runs the riatest tests">
    	<check-ria-test-is-on-path />
    	<run-riatest inputfile="src/${ant.project.name}.mxml"
    		outputfile="${deploy.dir}/${ant.project.name}.swf"
    		projectfile="${basedir}/riatest/alltests.rtp"/>
    </target>
	
	<target name="clean-riatest" >
		<delete dir="${reports.dir}/riatest" failonerror="false" />
		<delete file="${deploy.dir}/${ant.project.name}.swf" failonerror="false" />
	</target>
	
	<target name="build-for-automation" >
		<build-automation inputfile="src/${ant.project.name}.mxml"
			outputfile="${basedir}/bin/${ant.project.name}-automation.swf" 
			projectfile="${basedir}/riatest/alltests.rtp"/>
	</target>
</project>