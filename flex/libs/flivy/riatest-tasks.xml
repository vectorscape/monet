<?xml version="1.0"?>
<project name="Automation Tasks" >
	
	<import file="flex-tasks.xml" />
	
	<property environment="env"/>
	
	<property name="reports.dir" value="${basedir}/reports"/>
	
	<macrodef name="check-ria-test-is-on-path">
		<sequential>
			<propertyregex property="riatest.available" input="${env.PATH}" select="\0"
					regexp="riatest" casesensitive="false" />
			<if><not><isset property="riatest.available" /></not>
				<then><echo>${env.PATH}</echo>
			</then></if>		
			<fail unless="riatest.available">Error: riatest needs to be installed and added to your path. It's typically found at C:\Program Files\RIATest 4\</fail>
		</sequential>
	</macrodef>
	
	
	<!-- - - - - - - - - - - - - - - - - - 
		  target: check-riatest-project-available-available
		 - - - - - - - - - - - - - - - - - -->
	<macrodef name="check-riatest-project-available">
		<attribute name="riatest-project" />
		<sequential>
			<available property="riatest-project.available" 
				file="@{riatest-project}" />
			<if>
				<not><isset property="riatest-project.available" /></not>
				<then><echo message="No test riatest-project found at: @{riatest-project}" /></then>
			</if>
		</sequential>
	</macrodef>
	
	<macrodef name="build-riatest" >
		<attribute name="inputFile" />
		<attribute name="outputFile" />
		<attribute name="projectFile"/>
		<sequential>
			<check-riatest-project-available riatest-project="@{projectFile}" />
			<if><isset property="riatest-project.available" />
			<then>
				<echo message="Building for automation: @{inputFile}" />
				<buildFlexSWF inputfile="@{inputFile}" 
					outputfile="@{outputFile}">
					<additionalArgs>
						<arg value="-debug=true" />
						<arg line="-include-libraries ${lib.riatest.dir}/RIATestAgent3.swc &quot;${env.FLEX_HOME}/frameworks/libs/automation.swc&quot; &quot;${env.FLEX_HOME}/frameworks/libs/automation_dmv.swc&quot; &quot;${env.FLEX_HOME}/frameworks/libs/automation_agent.swc&quot;" />
					</additionalArgs>
				</buildFlexSWF>
			</then>
			</if>
		</sequential>
	</macrodef>
	
	<macrodef name="run-riatest">
		<attribute name="inputFile" />
		<attribute name="outputFile" />
		<attribute name="projectFile"/>
		<sequential>
			<build-riatest inputfile="@{inputFile}"
				outputfile="@{outputFile}" projectfile="@{projectFile}"/>
			<if><os family="Windows" />
				<then>
					<property name="riatest.executable" value="riatest.exe" />
					<property name="riatest.arg.prefix" value="/" />
				</then>
				<else>
					<property name="riatest.executable" value="riatest" />
					<property name="riatest.arg.prefix" value="-" />
				</else>
			</if>
					
			<check-if-needs-compile inputfile="${reports.dir}/riatest/results.junit"
				outputproperty="riatest.uptodate" />
			<if>
				<and>
					<not><equals arg1="${riatest.uptodate}" arg2="true" /></not>
					<isset property="riatest-project.available"/>
				</and>
				<then>
					<delete dir="${reports.dir}/riatest" failonerror="false" />
					<mkdir dir="${reports.dir}/riatest" />
					<exec executable="${riatest.executable}" failonerror="true">
						 <arg line="${riatest.arg.prefix}b ${riatest.arg.prefix}r " />
						 <arg line="${riatest.arg.prefix}p @{projectFile}" />
						 <arg line="${riatest.arg.prefix}oj ${reports.dir}/riatest/results.junit" />
						 <arg line="${riatest.arg.prefix}l '${browser.exe} ${deploy.url}' " />
					</exec>
				</then>
				<else><if><isset property="riatest-project.available"/><then>
					<echo>No changes since last run.</echo></then>
					</if>
				</else>
			</if>
		</sequential>
	</macrodef>
	
	<!-- ================================= 
          target: riatest 
         ================================= -->
    <target name="riatest" depends="" description="Runs the riatest tests">
    	<check-ria-test-is-on-path />
    	<run-riatest inputfile="src/${ant.project.name}.mxml"
    		outputfile="bin/${ant.project.name}-automation.swf"
    		projectfile="${basedir}/riatest/alltests.rtp"/>
    </target>
	<!-- ================================= 
          target: clean-riatest 
         ================================= -->
	<target name="riatest-clean" description="Cleans the riatest artifacts">
		<delete dir="${reports.dir}/riatest" failonerror="false" description="Cleans the riatest artifacts" />
		<delete file="bin/${ant.project.name}.swf" failonerror="false" />
	</target>
	
	<target name="build-for-automation" description="Builds the automation swf.">
		<build-riatest inputfile="src/${ant.project.name}.mxml"
			outputfile="${basedir}/bin/${ant.project.name}-automation.swf" 
			projectfile="${basedir}/riatest/alltests.rtp"/>
	</target>
</project>